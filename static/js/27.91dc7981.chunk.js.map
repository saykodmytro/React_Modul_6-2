{"version":3,"file":"static/js/27.91dc7981.chunk.js","mappings":"mOAYMA,GAAgBC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IA4D3B,UAxDoB,WAAO,IAAD,IAChBC,GAAWC,EAAAA,EAAAA,MAAXD,OAIFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACnD,GAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,sGAErBJ,GAAa,GAFQ,SAGEK,EAAAA,EAAAA,IAAA,qDACyBjB,IAJ3B,gBAGbkB,EAHa,EAGbA,KAGRR,EAAeQ,GANM,gDAQrBJ,EAAS,KAAMK,SARM,yBAUrBP,GAAa,GAVQ,4EAAH,qDActBI,GACD,GAAE,CAAChB,KAGF,4BACE,wBAAI,kBACJ,SAAC,KAAD,CAAMoB,GAAIhB,EAAYiB,QAAtB,SAA+B,YACpB,OAAVR,IAAkB,cAAGS,UAAU,aAAb,SAA2BT,IAC7CF,IAAa,SAAC,IAAD,IACG,OAAhBF,IACC,4BACE,wBAAKA,EAAYc,SACjB,0BAAI,WAASd,EAAYe,OACzB,0BAAOf,EAAYgB,WAGvB,0BACE,SAAC,KAAD,CAASH,UAAU,cAAcF,GAAG,WAApC,SAA+C,gBAIjD,SAAC,EAAAM,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAOC,KAAK,WAAWC,SAAS,SAAC/B,EAAD,YAKzC,C","sources":["pages/PostDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport Loader from 'components/Loader/Loader';\nimport React, { lazy, Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\nconst PostsComments = lazy(() => import('pages/PostsComments'));\n\n// /posts/0deqwe\n// /posts/dwa2123dwa241\nconst PostDetails = () => {\n  const { postId } = useParams();\n  // postId -> '0deqwe';\n  // postId -> 'dwa2123dwa241';\n  // Робимо кнопку Back\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n  const [postDetails, setPostDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPostDetails = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(\n          `https://jsonplaceholder.typicode.com/posts/${postId}`\n        );\n        setPostDetails(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPostDetails();\n  }, [postId]);\n\n  return (\n    <div>\n      <h1>Post Details</h1>\n      <Link to={backLinkRef.current}>Go back</Link>\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n      {postDetails !== null && (\n        <div>\n          <h2>{postDetails.title}</h2>\n          <h3>PostId: {postDetails.id}</h3>\n          <code>{postDetails.body}</code>\n        </div>\n      )}\n      <div>\n        <NavLink className=\"header-link\" to=\"comments\">\n          Comments\n        </NavLink>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"comments\" element={<PostsComments />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default PostDetails;\n"],"names":["PostsComments","lazy","postId","useParams","location","useLocation","backLinkRef","useRef","state","from","useState","postDetails","setPostDetails","isLoading","setIsLoading","error","setError","useEffect","fetchPostDetails","axios","data","message","to","current","className","title","id","body","Suspense","fallback","path","element"],"sourceRoot":""}